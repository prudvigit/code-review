@AbapCatalog.sqlViewName: 'ZV_MAT_EXTENDED'
@AbapCatalog.compiler.compareFilter: true
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Extended Material Master View'

define view Z_CDS_MAT_EXTENDED as select from mara
  inner join makt on mara.matnr = makt.matnr and makt.spras = $session.system_language
  inner join marc as marc_comp on marc_comp.matnr = mara.matnr
  left outer join eord on eord.matnr = mara.matnr and eord.werks = marc_comp.werks
  left outer join qinf on qinf.matnr = mara.matnr and qinf.werks = marc_comp.werks
  left outer join mapl on mapl.matnr = mara.matnr and mapl.werks = marc_comp.werks
  left outer join mkal on mkal.matnr = mara.matnr and mkal.werks = marc_comp.werks
  left outer join stpo on stpo.idnrk = mara.matnr
  left outer join stko on stko.stlnr = stpo.stlnr
  left outer join marc as marc_header on marc_header.matnr = stko.matnr and marc_header.werks = marc_comp.werks
{
  // Existing fields
  mara.matnr,
  makt.maktx,
  mara.matkl,
  marc_comp.schgt,
  mara.mtart,
  marc_comp.rgekz,
  marc_comp.sfcpf,
  mara.xchpf,
  marc_comp.werks,
  marc_comp.zzprodcode,
  mara.ersda,
  marc_comp.ersda as marc_ersda,
  mara.meins,
  marc_comp.mmsta,
  mara.mstae,
  marc_comp.beskz,
  marc_comp.disgr,
  marc_comp.dismm,
  marc_comp.dispo,
  marc_comp.ekgrp,
  marc_comp.plifz,
  marc_comp.sobsl,
  marc_comp.webaz,
  marc_comp.minbe,
  marc_comp.bstmi,
  marc_comp.bstma,
  marc_comp.wzeit,
  mara.raube,
  mara.qmpur,
  marc_comp.disls,
  marc_comp.sbdkz,
  marc_comp.strgr,
  marc_comp.ssqss,
  marc_comp.vrmod,
  marc_comp.vint1,
  marc_comp.vint2,
  marc_comp.bstrf,
  marc_comp.fvidk,
  mara.ntgew,
  mara.gewei,
  marc_comp.dzeit,
  marc_comp.mabst,
  marc_comp.lgfsb,
  marc_comp.lgpro,

  // EORD (Source List)
  eord.lifnr,        // Vendor
  eord.flifn,        // Fixed Vendor
  eord.febel,        // Delivery Block
  eord.vrtyp,        // Procurement Type in Source List

  // QINF (Quality Info Record)
  qinf.lieferant,    // Vendor
  qinf.werks as qinf_werks,
  qinf.loekz as qinf_loekz, // Deletion flag

  // MAPL (Task List Assignments)
  mapl.werks as mapl_werks,
  mapl.plnty,         // Task list type
  mapl.loekz as mapl_loekz,

  // MKAL (Production Version)
  mkal.werks as mkal_werks,
  mkal.matnr as mkal_matnr,
  mkal.verid,         // Production Version
  mkal.elpro,         // Explosion Indicator
  mkal.alort,         // Issue Storage Location
  mkal.text1,         // Description
  mkal.stlal,         // BOM Alt
  mkal.alnal,         // Routing Alt

  // Bulk Material Logic
  case
    when mara.mtart = 'ZPRR' then 'X'
    else ''
  end as schgt_rule,

  // Backflush Rule Logic
  case
    when marc_header.sfcpf = 'Z00001' and mara.xchpf <> 'X' then 'X'
    else ''
  end as backflush_check,

  case
    when marc_header.sfcpf = 'Z00001' and mara.xchpf = 'X' then 'Error: BACKFLUSH'
    else ''
  end as backflush_error

}
