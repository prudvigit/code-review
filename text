   LOOP AT <lt_result> ASSIGNING FIELD-SYMBOL(<ls_result>).

* Material Number
      ASSIGN COMPONENT 'MATNR' OF STRUCTURE <ls_result> TO FIELD-SYMBOL(<lv_matnr_value>).
      IF sy-subrc IS INITIAL.
        ls_data-matnr = <lv_matnr_value>.
      ENDIF.

* Sales Organization
      ASSIGN COMPONENT 'VKORG' OF STRUCTURE <ls_result> TO FIELD-SYMBOL(<lv_vkorg_value>).
      IF sy-subrc IS INITIAL.
        ls_data-vkorg = <lv_vkorg_value>.
      ENDIF.

* Customer number
      ASSIGN COMPONENT 'KUNNR' OF STRUCTURE <ls_result> TO FIELD-SYMBOL(<lv_kunnr_value>).
      IF sy-subrc IS INITIAL.
        ls_data-vkorg = <lv_vkorg_value>.
      ENDIF.

      APPEND ls_data TO lt_data.

    ENDLOOP.

*Get Pricelist FSI plant
    CALL METHOD zcl_ca_utilities=>get_tvarvc_value(
      EXPORTING
        iv_name   = lc_fsi_plant
      RECEIVING
        rt_tvarvc = lt_fsi_tvarvc ).
    IF sy-subrc = 0 AND lines( lt_fsi_tvarvc ) > 0.
      lv_fsi_plant = VALUE #( lt_fsi_tvarvc[ 1 ]-low OPTIONAL ).
    ENDIF.

    IF NOT lt_data IS INITIAL.
* Get the Planning Strategy Group from Plant Data for Material
      SELECT matnr
            ,strgr
             FROM marc
             INTO TABLE @DATA(lt_marc)
             FOR ALL ENTRIES IN @lt_data
             WHERE matnr EQ @lt_data-matnr AND
                   werks EQ @lv_fsi_plant.

* Get Sales Data for Material
      SELECT matnr
            ,vkorg
            ,vtweg
            ,aumng
             FROM mvke
             INTO TABLE @DATA(lt_mvke)
             FOR ALL ENTRIES IN @lt_data
             WHERE matnr EQ @lt_data-matnr AND
                   vkorg EQ @lt_data-vkorg AND
                   vtweg EQ @lc_10.

* Customer-Material Info Record Data Table

      SELECT vkorg
            ,vtweg
            ,kunnr
            ,matnr
            ,kdmat
             FROM knmt
             INTO TABLE @DATA(lt_knmt)
             FOR ALL ENTRIES IN @lt_data
             WHERE vkorg EQ @lt_data-vkorg AND
                   vtweg EQ @lc_10 AND
                   kunnr EQ @lt_data-kunnr AND
                   matnr EQ @lt_data-matnr.

      LOOP AT <lt_result> ASSIGNING <ls_result>.

        ASSIGN COMPONENT 'MATNR' OF STRUCTURE <ls_result> TO <lv_matnr_value>.
        IF sy-subrc IS INITIAL.
          DATA(ls_marc) = VALUE #( lt_marc[ matnr = <lv_matnr_value> ] OPTIONAL ).
        ENDIF.

        IF NOT ls_marc IS INITIAL.
          ASSIGN COMPONENT 'STRGR1' OF STRUCTURE <ls_result> TO FIELD-SYMBOL(<lv_strgr1_value>).
          IF sy-subrc IS INITIAL.
            <lv_strgr1_value> = ls_marc-strgr.
          ENDIF.
        ENDIF.

* Minimum quantity

        ASSIGN COMPONENT 'VKORG' OF STRUCTURE <ls_result> TO <lv_vkorg_value>.
        IF sy-subrc IS INITIAL.
          DATA(ls_mvke) = VALUE #( lt_mvke[ matnr = <lv_matnr_value>
                                            vkorg = <lv_vkorg_value>
                                            vtweg = lc_10 ] OPTIONAL ).
        ENDIF.

        IF NOT ls_mvke IS INITIAL.
          ASSIGN COMPONENT 'AUMNG' OF STRUCTURE <ls_result> TO FIELD-SYMBOL(<lv_aumng_value>).
          IF sy-subrc IS INITIAL.
            <lv_aumng_value> = ls_mvke-aumng.
          ENDIF.
        ENDIF.

* Material Number Used by Customer

        ASSIGN COMPONENT 'KUNNR' OF STRUCTURE <ls_result> TO <lv_kunnr_value>.
        IF sy-subrc IS INITIAL.
          DATA(ls_knmt) = VALUE #( lt_knmt[ vkorg = <lv_vkorg_value>
                                            vtweg = lc_10
                                            kunnr =  <lv_kunnr_value>
                                            matnr = <lv_matnr_value> ] OPTIONAL ).
        ENDIF.

        IF NOT ls_knmt IS INITIAL.
          ASSIGN COMPONENT 'KDMAT' OF STRUCTURE <ls_result> TO FIELD-SYMBOL(<lv_kdmat_value>).
          IF sy-subrc IS INITIAL.
            <lv_kdmat_value> = ls_knmt-kdmat.
          ENDIF.
        ENDIF.

        CLEAR: ls_marc, ls_mvke, ls_knmt.

      ENDLOOP.

    ENDIF.
