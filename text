    lt_input_data = VALUE #( FOR ls_entity IN lt_entity
                               (  material = ls_entity-material
                                  plant    = ls_entity-plant
                                  storeLoc = ls_entity-storeLoc
                                  customer = |{ ls_entity-customer ALPHA = IN }| ) ).
        SELECT kunnr
              ,vkorg
               FROM knvv
               INTO TABLE @DATA(lt_knvv)
               FOR ALL ENTRIES IN @lt_input_data
               WHERE kunnr EQ @lt_input_data-customer.
        SELECT vkorg
              ,vtweg
              ,werks
               FROM tvkwz
               INTO TABLE @DATA(lt_tvkwz)
               FOR ALL ENTRIES IN @lt_knvv
               WHERE vkorg EQ @lt_knvv-vkorg AND
                     vtweg EQ @lc_10.


        LOOP AT lt_input_data INTO DATA(ls_input_data).

          IF ls_input_data-customer IS INITIAL.
* Case1: Plant from customer - No customer : Plant from parameter  G --> Select stock for G
            DATA(ls_werk) = VALUE lty_range_plat( sign   = if_fsbp_const_range=>sign_include
                                                  option = if_fsbp_const_range=>option_equal
                                                  low    = ls_input_data-plant ).
            APPEND ls_werk TO lt_werks.
          ELSE.
            DATA(lt_cust_sales_org) = VALUE ltt_vkorg( FOR ls_knvv IN lt_knvv
                                         WHERE ( kunnr = ls_input_data-customer )
                                         ( vkorg = ls_knvv-vkorg ) ).

            DATA(lt_cust_plants) = VALUE ltt_werk( FOR ls_cust_sales_org IN lt_cust_sales_org
                                                   FOR ls_tvkwz IN lt_tvkwz
                                                   WHERE ( vkorg = ls_cust_sales_org-vkorg )
                                                           ( vkorg = ls_cust_sales_org-vkorg
                                                             werks = ls_tvkwz-werks ) ).
            IF NOT ls_input_data-plant IS INITIAL.

              TRY .

                  IF line_exists( lt_cust_plants[ werks = ls_input_data-plant  ] ).
* Case2: Plant from customer - A,B,C : Plant from parameter  C --> Select only stock for plant C
                    lt_werks_tmp = VALUE #( sign = if_fsbp_const_range=>sign_include
                                            option = if_fsbp_const_range=>option_equal
                                          ( low = ls_input_data-plant ) ).
                    DELETE lt_cust_plants WHERE werks NOT IN lt_werks_tmp.
                    CLEAR lt_werks_tmp.

                    lt_werks = VALUE #( FOR ls_cust_plant IN lt_cust_plants
                                        sign = if_fsbp_const_range=>sign_include
                                        option = if_fsbp_const_range=>option_equal
                                      ( low =  ls_cust_plant-werks ) ).
                  ELSE.
* Case 3: Plant from customer - A,B,C : Plant from parameter  G --> No plants are selected
                    DATA(lv_no_plant) =  abap_true.
                  ENDIF.

                CATCH cx_sy_itab_line_not_found.

              ENDTRY.

            ELSE.
* Case4: Plant from customer - A,B,C : Plant from parameter  is blank --> Select only stock for plant  A,B,C
              lt_werks = VALUE #( FOR ls_cust_plant IN lt_cust_plants
                                        sign = if_fsbp_const_range=>sign_include
                                        option = if_fsbp_const_range=>option_equal
                                ( low =  ls_cust_plant-werks ) ).

            ENDIF.

          ENDIF.

        ENDLOOP.
